// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement()) // Kunci utama dengan auto-increment
  username     String   @db.VarChar(100)             // Menyimpan username
  email        String   @unique                     // Email unik
  password     String   @db.VarChar(100)            // Menyimpan kata sandi
  name         String   @db.VarChar(100)            // Nama pengguna
  role         Role     @default(user)              // role pengguna
  token        String?  @db.VarChar(100)            // Token opsional
  keterangan_lulus Boolean @default(false)          // keterangan lulus 
  keterangan_pembayaran Boolean @default(false)          // keterangan daftar 
  pendaftar    Daftar[]                             // Relasi ke model Daftar
  @@map("users")                                    // Pemetaan ke tabel "users" di database
}

model Daftar {
  id           Int      @id @default(autoincrement()) // Kunci utama dengan auto-increment
  userId       Int                                     // Relasi ke User
  nama_lengkap String   @db.VarChar(100)              // Nama lengkap pendaftar
  asal_sekolah String   @db.VarChar(100)              // Asal sekolah
  jurusan      String   @db.VarChar(100)              // Jurusan yang dipilih
  no_hp        String   @db.VarChar(15)               // Nomor telepon pendaftar
  alamat       String   @db.VarChar(255)              // Alamat lengkap
  createdAt    DateTime @default(now())               // Waktu pendaftaran
  updatedAt    DateTime @updatedAt                    // Waktu terakhir update
  user         User     @relation(fields: [userId], references: [id]) // Relasi ke User
  @@map("daftars")                                   // Pemetaan ke tabel "daftars" di database
}




enum Role {
  user
  admin
}
